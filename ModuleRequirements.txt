- The Software shall store a user configured 'meal_to_ingredience' dictionary in a yaml file.

- The Software shall store a user configured 'ingredience_to_macros' dictionary in a yaml file.

- The 'meal_to_ingredience' dictionary shall store a 'grocerieMap', 'default', 'watchItems', 'numberPortions', 'postWorkout' and 'preWorkout' for each meal.

- The 'ingredience_to_macros' yaml shall contain a map between each meal and 'kcal', 'carb', 'fat' and 'protein'.

- The Software shall check consistency ot the 'meal_to_ingredience' and 'ingredience_to_macros' yaml file

- Each grocery in 'grocerieMap' shall store either a grocery or list of groceries

- The Software shall pick one item for each list of groceries in 'grocerieMap' randomly

- The list 'grocerieItems' of 'meal_to_ingredience' dictionary shall store a list of maps between grogeries and number of grams required for the meal

- The item 'watchItems' of 'meal_to_ingredience' dictionary shall store a list of spices and sauces that are required to prepare the meal  

- The item 'default' of 'meal_to_ingredience' dictionary shall enforce the meal if 'numberPortions' is equal or less than given '--days'  

- The item 'kcal' of 'ingredience_to_macros' dictionary shall indicate the kcal count of each portion the meal

- The item 'carb' of 'ingredience_to_macros' dictionary shall be an integer indicating the carberhydrate count of each portion of the meal

- The item 'fat' of 'ingredience_to_macros' dictionary shall be an integer indicating the fat count of each portion of the meal

- The item 'protein' of 'ingredience_to_macros' dictionary shall be an integer indicating the protein count of each portion of the meal

- The item 'numberPortions' of 'meal_to_ingredience' dictionary shall be an integer indicating the number of portions the meal generates

- The item 'postWorkout' of 'meal_to_ingredience' dictionary shall be a boolean to indicate a post workout meal

- The item 'preWorkout' of 'meal_to_ingredience' dictionary shall be a boolean to indicate a pre workout meal

- The Software shall be implemented using classes.

- The Software shall use a logger.

- The Software shall generate a 'shopping_list' yaml file which contains a list of grocerys, their number, a 'groceryList' and a 'watchList' for those meals.

- The 'groceryList' contains all chosen meals.

- The 'watchList' joins the watch list items of each choosen meal. 

- The Software shall ignore meals with more than 30g of Carbs if the mandatory '--lowcarb' option is set.

- The Software shall ignore meals with more than 12g of Carbs if the mandatory '--nocarb' option is set.

- The Software shall generate grogery lists that fit the kcal need of the user which is specified by the mandatory '--kcal'   option and defaults to 3500. The kcal need for days with exercise shall be increased by 700.

- The Software shall include a <number> of meals marked as 'preWorkout' and 'postWorkout' when the mandatory option '--exercises <number>' is set.

- The 'groceryList' shall contain each meal which is not tagged as 'preWorkout' or 'postWorkout' only once.

- When the parameter '--cheatmeals <number>' is set, the software shall reduce the overall required kcal by <number> times 850

- The Software shall decide between matching meals by the use of an random algorithm




